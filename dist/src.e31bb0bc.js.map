{"version":3,"sources":["Card.js","Deck.js","CardView.js","index.js"],"names":["SUIT","CLUBS","HEARTS","SPADES","DIAMONDS","RANK","ACE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","TEN","JACK","QUEEN","KING","TITLE","Card","suit","rank","_suit","_rank","data","module","exports","require","FACE","Deck","_undrawn","_drawn","_size","_remaining","card","newCards","Array","map","item","push","Error","fyShuffle","drawn","pop","clone","count","undrawn","i","hand","drawCard","length","array","shuffled","j","Math","floor","random","CardView","path","_imagePath","cardData","imagePath","_data","containerEl","document","createElement","className","_container","images","deck","table","querySelector","add","init","shuffle","dealRoundOne","dealHand","cardViews","cView","appendChild","element","console","log"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["const SUIT = {\n  CLUBS: 'clubs',\n  HEARTS: 'hearts',\n  SPADES: 'spades',\n  DIAMONDS: 'diamonds',\n};\n\nconst RANK = {\n  ACE: '01',\n  TWO: '02',\n  THREE: '03',\n  FOUR: '04',\n  FIVE: '05',\n  SIX: '06',\n  SEVEN: '07',\n  EIGHT: '08',\n  NINE: '09',\n  TEN: '10',\n  JACK: '11',\n  QUEEN: '12',\n  KING: '13',\n};\n\nconst TITLE = {\n  [RANK.ACE]: 'Ace',\n  [RANK.TWO]: 'Two',\n  [RANK.THREE]: 'Three',\n  [RANK.FOUR]: 'Four',\n  [RANK.FIVE]: 'Five',\n  [RANK.SIX]: 'Six',\n  [RANK.SEVEN]: 'Seven',\n  [RANK.EIGHT]: 'Eight',\n  [RANK.NINE]: 'Nine',\n  [RANK.TEN]: 'Ten',\n  [RANK.JACK]: 'Jack',\n  [RANK.QUEEN]: 'Queen',\n  [RANK.KING]: 'King',\n};\n\nclass Card {\n  constructor(suit, rank) {\n    this._suit = suit;\n    this._rank = rank;\n  }\n\n  get suit() {\n    return this._suit;\n  }\n  get rank() {\n    return this._rank;\n  }\n\n  get imageName() {\n    return `${this.suit}_${this.rank}.jpg`;\n  }\n\n  get data() {\n    return { suit: this.suit, rank: this.rank };\n  }\n\n  get description() {\n    return `${TITLE[this.rank]} of ${this.suit}`;\n  }\n\n  clone() {\n    const { suit, rank } = this.data;\n    return new Card(suit, rank);\n  }\n}\n\nmodule.exports.RANK = RANK;\nmodule.exports.SUIT = SUIT;\nmodule.exports.Card = Card;\n","const { SUIT, FACE, Card } = require('./Card');\n\nclass Deck {\n  constructor() {\n    this._undrawn = [];\n    this._drawn = [];\n    this._size = 0;\n    this._remaining = 0;\n  }\n\n  /**\n   * Adds one more Card instances to the deck\n   * obj = Card or Array[Cards]\n   */\n  add(card) {\n    // if a single item was supplied, wrap it into an array\n    // so we can treat everything the same;\n    newCards = card instanceof Array ? card : new Array(card);\n\n    newCards.map(item => {\n      if (item instanceof Card) {\n        this._undrawn.push(new Card(item.suit, item.rank));\n        this._size += 1;\n      } else {\n        throw Error(`Can't add ${item}. Only objects of type 'Card' can be added to a deck.`);\n      }\n    });\n\n    return null;\n  }\n\n  /**\n   * Randomises the order of cards in the _undrawn array.\n   * Cards in the _drawn array are not affected.\n   */\n  shuffle() {\n    this._undrawn = fyShuffle(this._undrawn);\n  }\n\n  /**\n   * Moves all cards in from _drawn array into the _undrawn array\n   */\n  rebuild() {\n    this._undrawn = [...this._undrawn, ...this._drawn];\n    this.drawn = [];\n  }\n\n  /**\n   * Returns the total number of cards in the deck.\n   * including any cards which have been drawn\n   */\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * Gets the remaininf number of cards which have not been drawn\n   */\n  get undrawn() {\n    return this._undrawn.length;\n  }\n\n  drawCard() {\n    const card = this._undrawn.pop();\n    this._drawn.push(card);\n    return card.clone();\n  }\n\n  dealHand(count) {\n    if (count > this.undrawn) {\n      throw Error(`Can't deal ${count} cards. Only ${this.undrawn} cards are left in the deck!`);\n    }\n\n    let i = 0;\n    const hand = [];\n    while (i++ < count) {\n      hand.push(this.drawCard());\n    }\n    return hand;\n  }\n}\n\n/**\n * Fisher-Yates Shuffle algorithm\n * Return a new array -- the original is not altered\n */\nfunction fyShuffle(array) {\n  const shuffled = array.map(item => item);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]]; // swap elements\n  }\n  return shuffled;\n}\n\nmodule.exports = Deck;\n","const Card = require('./Card');\n\nclass CardView {\n  static set imagePath(path) {\n    CardView._imagePath = path;\n  }\n\n  static get imagePath() {\n    return CardView._imagePath || 'images/';\n  }\n  constructor(cardData, imagePath = CardView.imagePath) {\n    this._data = cardData.clone();\n    const containerEl = document.createElement('div');\n    containerEl.className = `card ${cardData.suit}-${cardData.rank}`;\n    this._container = containerEl;\n  }\n\n  get cardData() {\n    return this._data.clone();\n  }\n\n  get element() {\n    return this._container;\n  }\n}\n\nmodule.exports = CardView;\n","const { Card, SUIT, RANK } = require('./Card');\nconst Deck = require('./Deck');\nconst CardView = require('./CardView');\nconst images = require('./images/*.*');\n\nconst deck = new Deck();\nconst table = document.querySelector('#table');\n\ndeck.add([\n  new Card(SUIT.CLUBS, RANK.JACK),\n  new Card(SUIT.HEARTS, RANK.JACK),\n  new Card(SUIT.SPADES, RANK.JACK),\n  new Card(SUIT.DIAMONDS, RANK.JACK),\n  new Card(SUIT.CLUBS, RANK.QUEEN),\n  new Card(SUIT.HEARTS, RANK.QUEEN),\n  new Card(SUIT.SPADES, RANK.QUEEN),\n  new Card(SUIT.DIAMONDS, RANK.QUEEN),\n  new Card(SUIT.CLUBS, RANK.KING),\n  new Card(SUIT.HEARTS, RANK.KING),\n  new Card(SUIT.SPADES, RANK.KING),\n  new Card(SUIT.DIAMONDS, RANK.KING),\n  new Card(SUIT.CLUBS, RANK.ACE),\n  new Card(SUIT.HEARTS, RANK.ACE),\n  new Card(SUIT.SPADES, RANK.ACE),\n  new Card(SUIT.DIAMONDS, RANK.ACE),\n]);\n\nconst init = () => {\n  deck.shuffle();\n  dealRoundOne();\n};\n\nconst dealRoundOne = () => {\n  const hand = deck.dealHand(5);\n  const cardViews = hand.map(card => {\n    const cView = new CardView(card);\n    table.appendChild(cView.element);\n    return cView;\n  });\n  console.log(cardViews);\n};\n\ninit();\n"]}